#labels Phase-Design
*Table of Contents*

<wiki:toc max_depth="2" />

=Introduction=
This document describes the architectural decisions for the Open Decision Repository project. All decisions are documented according to the paper _VfAD_.

At the beginning of this document you can find a listing of all the architectural decisions that have been taken. Please notice that the order of these decisions has no meaning. At the end you will find a chronological- and dependency view the decisions.


=Architectural Decisions =

<table border="1" cellspacing="0" cellpadding="5"  width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th>Java programming language</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>A programming language has to be chosen.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Java will be used.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>Both developers are experienced with the Java programming language as well as Java based technologies.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<is alternative for>> Tcl</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>



<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th>Tcl</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>A programming language has to be chosen.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Tcl won't be used as a programming language.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>The language is unknown to the developers. Learning an additional language would require too much time.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<is alternative for>> Java programming language</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>



<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> xowiki </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>Stefan Sobernig from Vienna university of economics and businesses offered the possibility to use their wiki like content authoring environment. This system would already support some features that would otherwise need to be implemented.
      </td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Xowiki won't be used.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>The programming language that it uses has been rejected.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<depends on>> Tcl</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>




<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> Web application </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>The ODR should make it easier to share knowledge. A web application is the easiest way to do this.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>The ODR will be a implemented as a web application.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>The customer wants a web application.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>todo</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>





<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> Java Enterprise Edition 5 </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>A framework that enables the creation of Java web applications has to be chosen.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>The ODR will be a implemented using Java Enterprise Edition 5. Version 5 is used because Icefaces version 1.8 requires Glassfish version 2.x.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>Java Enterprise Edition comes with many useful features that allow the developer to focus on the implementation of business logic.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<is alternative for>> Java Enterprise Edition 6</li>
<li><<depends on>> Java programming language</li>
<li><<caused by>> Web application</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>





<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> Java Enterprise Edition 6 </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>A framework that enables the creation of Java web applications has to be chosen.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Java EE6 won't be used since Glassfish version 3 has been rejected.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>Java Enterprise Edition comes with many useful features that allow the developer to focus on the implementation of business logic.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<is alternative for>> Java Enterprise Edition 5</li>
<li><<depends on>> Java programming language</li>
<li><<caused by>> Web application</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>






<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> Glassfish version 2 </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>A web application server for Java EE 5 has to be found.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Glassfish version 2 will be used since Icefaces version 1.8 is used. Icefaces 1.8 requires JSF version 1.1 or 1.2 which ships with the application server.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>Glassfish version 2 comes with implementations for the Java EE 5 APIs, which also includes JSF 1.2 and TopLink.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<is alternative for>> Glassfish version 3</li>
<li><<caused by>> Java Enterprise Edition 5</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>





<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> Glassfish version 3 </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>A web application server for Java EE 6 has to be found.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Glassfish version 3 won't be used since we are using Icefaces 1.8, which requires JSF 1.1 or 1.2. Glassfish v3 can be configured to use a provided JSF implementation but it is still not compatible with Icefaces 1.8.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>Glassfish v3 is a lightweight web application server and is also the reference implementation for Java EE 6.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<is alternative for>> Glassfish version 2</li>
<li><<caused by>> Java Enterprise Edition 6</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>





<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> Model View Controller Pattern </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>User interface modifications should not result in changes to the business logic. On the other hand it should be easy to adapt the user interface to future changes.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Structure the user interface according to the Model View Controller Pattern.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>According to the Model View Controller Pattern the model (business logic) has no knowledge about the view. This being the case, the model won't change if the user interface changes. In addition the user interface can be completely swapped without affecting the business logic.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>-</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>





<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> JavaServer Faces version 1.2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>An implementation of the Model View Controller Pattern needs to be found.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Use JavaServer Faces v1.2.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>JavaServer Faces is a well-proven MVC web-application framework. It has been chosen because it perfectly integrates itself into the Java technology stack.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<is alternative for>> JavaServer Faces v2</li>
<li><<depends on>> Java Enterprise Edition 5</li>
<li><<caused by>> Model View Controller Pattern</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>





<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th> JavaServer Faces version 2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>An implementation of the Model View Controller Pattern needs to be found.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Use JavaServer Faces v1.2.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>JavaServer Faces is a well-proven MVC web-application framework. It has been chosen because it perfectly integrates itself into the Java technology stack.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<is alternative for>> JavaServer Faces v1.2</li>
<li><<depends on>> Java Enterprise Edition 6</li>
<li><<caused by>> Model View Controller Pattern</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>





<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th>Asynchronous JavaScript and XML</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>Improve user experience by providing a rich internet application.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Use Asynchronous JavaScript and XML (AJAX).</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>JavaScript is becoming a standard, especially with the upcoming HTML 5. There are also many useful JavaScript frameworks.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
-
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>



<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th>Icefaces 1.8</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>Provide AJAX support for the JSF components.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Use Icefaces 1.8.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>Icefaces 1.8 extends the standard JSF components with AJAX support. It also adds additional components that are handy when developing a RIA.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<depends on>> JavaServer Faces 1.2</li>
<li><<is alternative for>> Icefaces 2</li>
<li><<caused by>> Asynchronous JavaScript and XML</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>





<table border="1" cellspacing="0" cellpadding="5" width="650">
  <thead>
    <tr>
      <th width="150"> Name </th>
      <th>Icefaces version 2-beta1</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td> *Problem/Issue* </td>
      <td>Provide AJAX support for the JSF components.</td>
    </tr>
    <tr>
      <td> *Decision* </td>
      <td>Unfortunately the current version (2010-09-15) of Icefaces 2 is still in the first beta phase. Therefore Icefaces 2 is rejected.</td>
    </tr>
    <tr>
      <td> *Arguments* </td>
      <td>Icefaces v2 extends the standard JSF components with AJAX support. It also adds additional components that are handy when developing a RIA. Icefaces 2 can be used with Glassfish v3, Java EE6 and JSF 2.</td>
    </tr>
    <tr>
      <td> *Related decisions* </td>
      <td>
<ul>
<li><<depends on>> JavaServer Faces 2</li>
<li><<is alternative for>> Icefaces 1.8</li>
<li><<caused by>> Asynchronous JavaScript and XML</li>
</ul>
</td>
    </tr>
    <tr>
      <td> *Related requirements* </td>
      <td>todo</td>
    </tr>
  </tbody>
</table>




=Chronological View=

=Dependency View=